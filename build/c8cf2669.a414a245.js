(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{102:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return m}));var n=a(2),l=a(6),r=(a(0),a(121)),b={id:"millcommand",title:"MillCommand",sidebar_label:"MillCommand"},c={unversionedId:"dev/code/millcommand",id:"dev/code/millcommand",isDocsHomePage:!1,title:"MillCommand",description:"@package de.timonwei.cnc.workspace.commands;",source:"@site/docs/dev/code/millcommand.md",slug:"/dev/code/millcommand",permalink:"/docs/dev/code/millcommand",editUrl:"https://github.com/timonweide/cnc-simulator-docs/edit/master/docs/dev/code/millcommand.md",version:"current",sidebar_label:"MillCommand",sidebar:"devSidebar",previous:{title:"CommandTable",permalink:"/docs/dev/code/commandtable"},next:{title:"Circle",permalink:"/docs/dev/code/circle"}},i=[{value:"Methods",id:"methods",children:[{value:"MillCommand()",id:"millcommand",children:[]},{value:"MillCommand(String[] args)",id:"millcommandstring-args",children:[]},{value:"removeLetters(String[] args)",id:"removelettersstring-args",children:[]},{value:"calculate(Mill mill, boolean insertAtCurrentIndex)",id:"calculatemill-mill-boolean-insertatcurrentindex",children:[]},{value:"onExecution()",id:"onexecution",children:[]},{value:"addToMill(Mill mill, CommandCoordinates coords, boolean insertAtCurrentIndex)",id:"addtomillmill-mill-commandcoordinates-coords-boolean-insertatcurrentindex",children:[]},{value:"addToMill(Mill mill, boolean insertAtCurrentIndex)",id:"addtomillmill-mill-boolean-insertatcurrentindex",children:[]},{value:"toString()",id:"tostring",children:[]},{value:"check(MillPosition pos)",id:"checkmillposition-pos",children:[]},{value:"getInitialValue(Value v)",id:"getinitialvaluevalue-v",children:[]},{value:"setEndPosition(double x, double y)",id:"setendpositiondouble-x-double-y",children:[]},{value:"Value()",id:"value",children:[]},{value:"setRoot(Mill mill, boolean insertAtCurrentIndex)",id:"setrootmill-mill-boolean-insertatcurrentindex",children:[]}]}],o={rightToc:i};function m(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"@package de.timonwei.cnc.workspace.commands;"))),Object(r.b)("p",null,"The abstract class ",Object(r.b)("strong",{parentName:"p"},"MillCommand")," provides the basic structure for every type of mill command."),Object(r.b)("h2",{id:"methods"},"Methods"),Object(r.b)("h3",{id:"millcommand"},"MillCommand()"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"constructor")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"MillCommand")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Creates an instance of MillCommand.")))),Object(r.b)("h3",{id:"millcommandstring-args"},"MillCommand(String[] args)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"constructor")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"MillCommand")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"args: String[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Creates an instance of MillCommand.")))),Object(r.b)("h3",{id:"removelettersstring-args"},"removeLetters(String[] args)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"String[]")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"removeLetters")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"args: String[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Removes all letters from the incoming String.")))),Object(r.b)("h3",{id:"calculatemill-mill-boolean-insertatcurrentindex"},"calculate(Mill mill, boolean insertAtCurrentIndex)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"void")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"calculate")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"mill: Mill, insertAtCurrentIndex: boolean"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Basic structure for calculating positions.")))),Object(r.b)("h3",{id:"onexecution"},"onExecution()"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"void")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"onExecution")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Structure for actions taken, when the command is executed.")))),Object(r.b)("h3",{id:"addtomillmill-mill-commandcoordinates-coords-boolean-insertatcurrentindex"},"addToMill(Mill mill, CommandCoordinates coords, boolean insertAtCurrentIndex)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"void")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"addToMill")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"mill: Mill, coords: CommandCoordinates, insertAtCurrentIndex: boolean"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Adds the command to the mill.")))),Object(r.b)("h3",{id:"addtomillmill-mill-boolean-insertatcurrentindex"},"addToMill(Mill mill, boolean insertAtCurrentIndex)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"void")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"addToMill")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"mill: Mill, insertAtCurrentIndex: boolean"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Adds the command to the mill.")))),Object(r.b)("h3",{id:"tostring"},"toString()"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"String")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"toString")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Creates a readable String of the class.")))),Object(r.b)("h3",{id:"checkmillposition-pos"},"check(MillPosition pos)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"check")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"pos: MillPosition"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Checks if the calculated position is visible on the milled surface.")))),Object(r.b)("h3",{id:"getinitialvaluevalue-v"},"getInitialValue(Value v)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"double")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"getInitialValue")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"v: Value"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Gets the initial values of the command.")))),Object(r.b)("h3",{id:"setendpositiondouble-x-double-y"},"setEndPosition(double x, double y)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"void")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"toString")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"x: double, y: double"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the end position to x and y for further processing.")))),Object(r.b)("h3",{id:"value"},"Value()"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"enum")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"Value")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Contains values for x, y, i, j.")))),Object(r.b)("h3",{id:"setrootmill-mill-boolean-insertatcurrentindex"},"setRoot(Mill mill, boolean insertAtCurrentIndex)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Return Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameters"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"void")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("strong",{parentName:"td"},"setRoot")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"mill: Mill"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets the root position of the command.")))))}m.isMDXComponent=!0},121:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return p}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=l.a.createContext({}),m=function(e){var t=l.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=m(e.components);return l.a.createElement(o.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},j=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,b=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),d=m(a),j=n,p=d["".concat(b,".").concat(j)]||d[j]||O[j]||r;return a?l.a.createElement(p,c(c({ref:t},o),{},{components:a})):l.a.createElement(p,c({ref:t},o))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,b=new Array(r);b[0]=j;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var o=2;o<r;o++)b[o]=a[o];return l.a.createElement.apply(null,b)}return l.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"}}]);